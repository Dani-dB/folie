Search.setIndex({"docnames": ["api/dataloading", "api/estimation", "api/functions", "api/generated/folie.BrownianMotion", "api/generated/folie.DrozdovDensity", "api/generated/folie.ELBOEstimator", "api/generated/folie.EMEstimator", "api/generated/folie.ElerianDensity", "api/generated/folie.EulerDensity", "api/generated/folie.ExactDensity", "api/generated/folie.KesslerDensity", "api/generated/folie.KramersMoyalEstimator", "api/generated/folie.LikelihoodEstimator", "api/generated/folie.OrnsteinUhlenbeck", "api/generated/folie.Overdamped", "api/generated/folie.OverdampedFreeEnergy", "api/generated/folie.OverdampedSplines1D", "api/generated/folie.OzakiDensity", "api/generated/folie.ShojiOzakiDensity", "api/generated/folie.Trajectories", "api/generated/folie.functions.BSplinesFunction", "api/generated/folie.functions.Constant", "api/generated/folie.functions.FiniteElement", "api/generated/folie.functions.Fourier", "api/generated/folie.functions.KernelFunction", "api/generated/folie.functions.Linear", "api/generated/folie.functions.Polynomial", "api/generated/folie.functions.sklearnBSplines", "api/generated/folie.functions.sklearnTransformer", "api/generated/folie.functions.sklearnWrapper", "api/models", "auto_examples/example_em", "auto_examples/index", "auto_examples/plot_biasedOU", "auto_examples/plot_example", "auto_examples/plot_fem", "auto_examples/plot_functions", "auto_examples/plot_likelihood", "auto_examples/plot_underdamped", "auto_examples/sg_execution_times", "for_developper", "howto", "index", "notebooks/analysis_committor", "notebooks/estimation", "notebooks/simulations", "notebooks/statistical_performances/overdampedOU", "notebooks/statistical_performances/overdampedhiddenOU", "notebooks/tutorials/DNAhairpin", "notebooks/tutorials/alanine_dipeptide", "sg_execution_times", "statistical_performances", "tutorials"], "filenames": ["api/dataloading.rst", "api/estimation.rst", "api/functions.rst", "api/generated/folie.BrownianMotion.rst", "api/generated/folie.DrozdovDensity.rst", "api/generated/folie.ELBOEstimator.rst", "api/generated/folie.EMEstimator.rst", "api/generated/folie.ElerianDensity.rst", "api/generated/folie.EulerDensity.rst", "api/generated/folie.ExactDensity.rst", "api/generated/folie.KesslerDensity.rst", "api/generated/folie.KramersMoyalEstimator.rst", "api/generated/folie.LikelihoodEstimator.rst", "api/generated/folie.OrnsteinUhlenbeck.rst", "api/generated/folie.Overdamped.rst", "api/generated/folie.OverdampedFreeEnergy.rst", "api/generated/folie.OverdampedSplines1D.rst", "api/generated/folie.OzakiDensity.rst", "api/generated/folie.ShojiOzakiDensity.rst", "api/generated/folie.Trajectories.rst", "api/generated/folie.functions.BSplinesFunction.rst", "api/generated/folie.functions.Constant.rst", "api/generated/folie.functions.FiniteElement.rst", "api/generated/folie.functions.Fourier.rst", "api/generated/folie.functions.KernelFunction.rst", "api/generated/folie.functions.Linear.rst", "api/generated/folie.functions.Polynomial.rst", "api/generated/folie.functions.sklearnBSplines.rst", "api/generated/folie.functions.sklearnTransformer.rst", "api/generated/folie.functions.sklearnWrapper.rst", "api/models.rst", "auto_examples/example_em.rst", "auto_examples/index.rst", "auto_examples/plot_biasedOU.rst", "auto_examples/plot_example.rst", "auto_examples/plot_fem.rst", "auto_examples/plot_functions.rst", "auto_examples/plot_likelihood.rst", "auto_examples/plot_underdamped.rst", "auto_examples/sg_execution_times.rst", "for_developper.rst", "howto.rst", "index.rst", "notebooks/analysis_committor.ipynb", "notebooks/estimation.ipynb", "notebooks/simulations.ipynb", "notebooks/statistical_performances/overdampedOU.ipynb", "notebooks/statistical_performances/overdampedhiddenOU.ipynb", "notebooks/tutorials/DNAhairpin.ipynb", "notebooks/tutorials/alanine_dipeptide.ipynb", "sg_execution_times.rst", "statistical_performances.rst", "tutorials.rst"], "titles": ["Data loading", "Estimation", "Spatial dependence", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">folie</span></code>.BrownianMotion", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">folie</span></code>.DrozdovDensity", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">folie</span></code>.ELBOEstimator", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">folie</span></code>.EMEstimator", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">folie</span></code>.ElerianDensity", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">folie</span></code>.EulerDensity", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">folie</span></code>.ExactDensity", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">folie</span></code>.KesslerDensity", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">folie</span></code>.KramersMoyalEstimator", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">folie</span></code>.LikelihoodEstimator", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">folie</span></code>.OrnsteinUhlenbeck", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">folie</span></code>.Overdamped", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">folie</span></code>.OverdampedFreeEnergy", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">folie</span></code>.OverdampedSplines1D", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">folie</span></code>.OzakiDensity", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">folie</span></code>.ShojiOzakiDensity", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">folie</span></code>.Trajectories", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">folie.functions</span></code>.BSplinesFunction", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">folie.functions</span></code>.Constant", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">folie.functions</span></code>.FiniteElement", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">folie.functions</span></code>.Fourier", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">folie.functions</span></code>.KernelFunction", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">folie.functions</span></code>.Linear", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">folie.functions</span></code>.Polynomial", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">folie.functions</span></code>.sklearnBSplines", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">folie.functions</span></code>.sklearnTransformer", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">folie.functions</span></code>.sklearnWrapper", "Models of Langevin dynamics", "Hidden Overdamped Langevin Estimation", "General examples", "ABMD biased dynamics", "Overdamped Langevin Estimation", "Overdamped Langevin Estimation", "Functional set", "Likelihood functions", "Overdamped Langevin Estimation", "Computation times", "For developper", "How-to guides", "Welcome to folie\u2019s documentation!", "Analysis of obtained models", "Estimation of overdamped model", "Models simulations", "Overdamped", "Overdamped with hidden variables", "DNA Hairpin", "Alanine Dipeptide", "Computation times", "Statistical performances", "Tutorials"], "terms": {"class": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 40], "mu": [3, 13, 15, 33, 37], "0": [3, 6, 13, 23, 31, 33, 34, 35, 36, 37, 38, 39, 45, 46, 47, 49, 50], "sigma": [3, 13, 15, 37], "1": [3, 6, 13, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 40, 44, 45, 46, 47, 48, 49], "dim": [3, 4, 7, 8, 9, 10, 13, 14, 15, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29, 31, 35, 47], "kwarg": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 46], "sourc": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38], "model": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 37, 38, 41, 42, 46, 47, 48, 49], "forc": [3, 13, 14, 31, 33, 34, 35, 37, 38, 40, 44, 48], "brownian": 3, "motion": 3, "paramet": [3, 5, 6, 9, 11, 12, 13, 14, 15, 16, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 40], "dx": [3, 13, 15], "t": [3, 13, 15, 33, 36, 44, 45, 46, 47, 48, 49], "x": [3, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 36, 38, 44, 45, 46, 48], "dt": [3, 13, 15, 19, 31, 33, 34, 35, 37, 38, 44, 45, 46, 47, 48, 49], "dw_t": [3, 13, 15], "where": [3, 13], "constant": [3, 31, 38, 47, 48], "sqrt": [3, 13, 33, 34], "initi": [3, 5, 6, 11, 12, 13, 14], "an": [3, 5, 6, 7, 8, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 42, 45, 49], "overdamp": [3, 6, 8, 11, 12, 13, 15, 16, 19, 22, 25, 32, 33, 39, 40, 41, 48, 50], "langevin": [3, 6, 8, 11, 12, 13, 14, 15, 16, 19, 22, 25, 32, 33, 39, 42, 48, 50], "diffus": [3, 13, 14, 31, 33, 34, 35, 37, 38, 44, 48], "function": [3, 4, 7, 8, 10, 13, 14, 17, 18, 19, 31, 32, 34, 35, 38, 39, 42, 47, 50], "spatial": [3, 13, 14, 40, 42], "depend": [3, 13, 14, 40, 42], "posit": [3, 13, 14, 15, 49], "If": [3, 13, 14, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 42], "i": [3, 5, 6, 7, 8, 11, 12, 13, 14, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 34, 35, 40, 42, 45, 46, 48, 49], "given": [3, 13, 14, 15], "default": [3, 11, 12, 13, 14, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 40, 44, 48], "copi": [3, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31], "int": [3, 13, 14, 16, 40], "dimens": [3, 4, 7, 8, 9, 10, 13, 14, 17, 18, 49], "By": [3, 13, 14], "domain": [3, 13, 14, 16, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 36, 44, 48], "has_bia": [3, 13, 14, 33], "none": [3, 5, 6, 11, 12, 13, 14, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 48], "bool": [3, 5, 6, 11, 12, 13, 14, 15], "parametricfunct": [3, 13, 14], "assum": [3, 5, 6, 7, 8, 11, 12, 13, 14], "bia": [3, 13, 14], "data": [3, 5, 6, 11, 12, 13, 14, 16, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 33, 34, 35, 37, 38, 42, 44, 45, 46, 47, 48, 49, 51], "true": [3, 5, 6, 12, 13, 14, 15, 33, 38], "thi": [3, 5, 6, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 36, 40, 41, 45, 48, 49], "extra": [3, 13, 14], "column": [3, 13, 14], "present": [3, 13, 14, 36], "g": [3, 13, 14, 45], "f_bia": [3, 13, 14], "optim": [3, 13, 14, 15, 24, 40, 42], "make": [3, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "deep": [3, 5, 6, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 42], "return": [3, 5, 6, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 40, 48], "A": [3, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 37, 40], "new": [3, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "exact_step": 3, "dz": 3, "simpl": [3, 5, 6, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 34, 35, 38, 40, 42, 44, 48], "can": [3, 5, 6, 11, 12, 20, 21, 22, 23, 25, 26, 27, 28, 29, 40, 41, 43, 44, 45, 46, 48, 49], "simul": [3, 33, 41, 46, 47], "exactli": 3, "get_param": [3, 5, 6, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "fals": [3, 5, 6, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "get": [3, 5, 6, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "param": [3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "map": [3, 5, 6, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "string": [3, 5, 6, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "ani": [3, 5, 6, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "name": [3, 5, 6, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 37, 46, 47], "valu": [3, 5, 6, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 37], "set_param": [3, 5, 6, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "set": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 37, 39, 40, 50], "estim": [3, 5, 6, 8, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 37, 39, 42, 46, 47, 48, 50], "The": [3, 5, 6, 11, 12, 13, 14, 15, 16, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 40, 42, 48, 49], "method": [3, 5, 6, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 40], "work": [3, 5, 6, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 37], "well": [3, 5, 6, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 40], "nest": [3, 5, 6, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "object": [3, 5, 6, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 45], "pipelin": [3, 5, 6, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "latter": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "have": [3, 5, 6, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 40, 41, 43, 44, 48, 49], "form": [3, 5, 6, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "compon": [3, 5, 6, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 40], "__": [3, 5, 6, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "so": [3, 5, 6, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "": [3, 5, 6, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 44, 45, 46, 48], "possibl": [3, 5, 6, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 45], "updat": [3, 5, 6, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "each": [3, 5, 6, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "dict": [3, 5, 6, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "self": [3, 5, 6, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 40, 46, 48], "instanc": [3, 5, 6, 11, 12, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "properti": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 48], "coeffici": [3, 7, 8, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 38, 40, 46, 47], "access": [3, 4, 7, 8, 9, 10, 13, 14, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 40, 48], "coefficients_diffus": [3, 13, 14, 15], "coefficients_forc": [3, 13, 14, 15], "coefficients_meandispl": [3, 13, 14, 15], "dimensionn": [3, 13, 14, 15], "has_exact_dens": [3, 13, 14, 15], "ha": [3, 13, 14, 15, 45], "exact": [3, 9, 13, 14, 15, 33, 46], "densiti": [3, 4, 7, 8, 9, 10, 13, 14, 15, 17, 18], "implement": [3, 13, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 36, 40], "likelihood": [3, 4, 6, 7, 8, 10, 12, 14, 17, 18, 19, 32, 39, 42, 46, 50], "which": [4, 5, 7, 8, 9, 10, 11, 12, 17, 18, 40], "repres": [4, 7, 8, 9, 10, 17, 18, 40], "drozdov": [4, 33, 37, 46], "approxim": [4, 7, 8, 10, 15, 17, 18], "transit": [4, 5, 6, 7, 8, 9, 10, 12, 17, 18, 45, 46], "sde": [4, 7, 8, 9, 10, 17, 18], "referenc": [4, 7, 8, 9, 10, 17, 18], "dure": [4, 7, 8, 9, 10, 17, 18], "call": [4, 5, 6, 7, 8, 9, 10, 11, 12, 17, 18, 40, 45, 46, 48], "check_dim": [4, 7, 8, 9, 10, 17, 18], "correct": [4, 7, 8, 9, 10, 17, 18, 31, 34, 38], "evalu": [4, 7, 8, 9, 10, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 29], "preprocess_traj": [4, 7, 8, 9, 10, 11, 15, 17, 18, 37], "trj": [4, 7, 8, 9, 10, 11, 17, 18, 31, 33, 34, 35, 37, 38, 44, 45, 48, 49], "basic": [4, 7, 8, 9, 10, 11, 17, 18], "preprocess": [4, 7, 8, 9, 10, 11, 15, 17, 18], "underli": [4, 7, 8, 9, 10, 17, 18], "abmd": [4, 7, 8, 10, 12, 13, 14, 17, 18, 19, 32, 39, 45, 50], "bias": [4, 7, 8, 10, 12, 13, 14, 17, 18, 19, 32, 39, 45, 50], "dynam": [4, 7, 8, 10, 12, 13, 14, 16, 17, 18, 19, 32, 39, 42, 45, 49, 50], "maxim": [5, 6], "evid": 5, "lower": 5, "bound": 5, "similar": 5, "em": 5, "expect": [5, 6], "realiz": 5, "insid": 5, "minim": [5, 6, 12], "loop": [5, 6], "fetch_model": [5, 6, 11, 12], "yield": [5, 6, 11, 12], "fit": [5, 6, 11, 12, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 40, 42, 44, 47, 48], "wa": [5, 6, 11, 12, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 40, 48], "coefficients0": [5, 6, 12], "use_jac": [5, 6, 12], "callback": [5, 6, 12], "minimize_kwarg": [5, 12], "l": [5, 12, 37], "bfg": [5, 12], "b": [5, 12, 20, 36], "intern": [5, 6, 11, 12], "overwrit": [5, 11, 12], "wai": [5, 11, 12], "everi": [5, 11, 12], "autonom": [5, 11, 12], "sometim": [5, 11, 12], "partial_fit": [5, 11, 12], "avail": [5, 9, 11, 12, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 42, 45, 48], "case": [5, 11, 12], "array_lik": [5, 6, 11, 12, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "us": [5, 16, 20, 21, 24, 26, 27, 28, 29, 37, 41, 42, 43, 44, 45, 48, 49], "addit": [5, 6, 11, 12, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "refer": [5, 11, 12, 24, 40, 42], "fit_fetch": [5, 6, 11, 12, 31, 33, 34, 35, 38, 44, 46, 47, 48], "subsequ": [5, 6, 11, 12], "fetch": [5, 6, 11, 12, 49], "one": [5, 6, 7, 8, 11, 12], "argument": [5, 6, 11, 12, 40], "has_model": [5, 6, 11, 12], "report": [5, 6, 11, 12], "whether": [5, 6, 11, 12], "contain": [5, 6, 11, 12, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 40, 41, 52], "otherwis": [5, 6, 11, 12], "type": [5, 6, 11, 12, 15, 40], "shortcut": [5, 6, 11, 12], "arg": [6, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "tol": 6, "1e": [6, 33, 35, 45, 46, 47], "05": [6, 33], "max_it": [6, 31, 47], "100": 6, "n_init": 6, "warm_start": 6, "no_stop": 6, "verbos": [6, 31, 47], "verbose_interv": [6, 31, 47], "10": [6, 33, 35, 44, 45, 48], "algorithm": [6, 40], "todo": [6, 15], "replac": 6, "all": [6, 32, 46, 50], "histori": 6, "In": [6, 7, 8, 11, 12, 36, 45, 46, 48], "do": 6, "altern": 6, "comput": [6, 7, 8, 40, 48, 49], "hidden": [6, 7, 8, 19, 25, 32, 39, 50], "elerian": [7, 33, 37, 46], "milstein": 7, "e_step": [7, 8], "weight": [7, 8], "mu0": [7, 8], "sig0": [7, 8], "presenc": [7, 8, 33], "variabl": [7, 8, 24, 42, 49], "reconstruct": [7, 8], "kalman": [7, 8], "filter": [7, 8], "overdampedhidden": [7, 8, 31, 47], "hiddencorrect": [7, 8], "trajectori": [7, 8, 15, 31, 33, 34, 35, 37, 38, 42, 44, 45, 46, 48, 49], "euler": [8, 33, 37, 46, 47], "when": [9, 40], "kessler": [10, 33, 37, 46], "kramer": 11, "moyal": 11, "option": [11, 12, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 40], "capabl": [11, 12, 45], "onlin": [11, 12], "learn": [11, 12, 42], "e": [11, 12, 34, 40, 45], "resum": [11, 12], "process": [11, 12, 49], "linearregress": [11, 20, 21, 22, 23, 25, 26, 27, 28, 29], "copy_x": [11, 20, 21, 22, 23, 25, 26, 27, 28, 29], "fit_intercept": [11, 20, 21, 22, 23, 25, 26, 27, 28, 29], "base": [12, 15, 40], "theta": 13, "kappa": 13, "ou": 13, "ornstein": 13, "uhlenbeck": 13, "space": [14, 31, 34, 38], "knot": [15, 16], "beta": [15, 44, 48], "free": [15, 44, 48], "energi": [15, 44, 48], "equat": [15, 42], "defin": [15, 40, 42, 44, 45, 48], "use_midpoint": 15, "colvar": 15, "grid": [15, 31, 33, 34, 35, 36, 37, 38, 44, 46, 47, 48], "faster": 15, "q": [15, 48], "list": [15, 16, 24, 29], "ndarrai": [15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 40], "cv": 15, "piecewis": 15, "linear": [15, 20, 21, 22, 23, 26, 27, 28, 29, 31, 34, 36, 47], "logd": 15, "gradf": 15, "traj": 15, "numba": 15, "tupl": [15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 45], "bin": [15, 31, 34, 49], "indic": 15, "displac": [15, 40], "gener": [16, 31, 33, 34, 35, 36, 37, 38, 40, 42], "defaut": [16, 20, 21, 22, 23, 25, 26, 27, 28, 29], "arrai": [16, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 37, 40, 46], "either": 16, "number": [16, 40, 51], "spline": [16, 20, 36], "more": [16, 27, 40, 42, 45], "precis": 16, "expens": 16, "run": [16, 31, 33, 34, 35, 36, 37, 38, 40, 42, 45, 46, 47], "requir": [16, 45], "ozaki": [17, 18, 33, 37, 46], "shoji": 18, "k": [20, 27, 33, 36, 45], "3": [20, 27, 31, 33, 36, 38, 44, 45, 46, 47, 48, 49], "bc_type": [20, 27], "output_shap": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "overlai": 20, "abov": 20, "scipi": [20, 36], "bspline": [20, 27, 35], "hold": [20, 40], "most": [20, 40, 45, 46, 48], "differenti": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "respect": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 51], "result": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 42, 45], "y": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 36], "sample_weight": [20, 21, 22, 23, 25, 26, 27, 28], "regress": [20, 21, 22, 23, 25, 26, 27, 28, 29], "featur": [20, 21, 22, 23, 25, 26, 27, 28, 29, 41], "deriv": [20, 21, 22, 23, 25, 26, 27, 28, 29], "like": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 40, 48], "shape": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 34, 35, 36, 46, 49], "n_sampl": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "point": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 45, 51], "train": [20, 21, 22, 23, 25, 26, 27, 28, 29], "n_target": [20, 21, 22, 23, 25, 26, 27, 28, 29], "target": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "Will": [20, 21, 22, 23, 25, 26, 27, 28, 29], "cast": [20, 21, 22, 23, 25, 26, 27, 28, 29], "dtype": [20, 21, 22, 23, 25, 26, 27, 28, 29, 48], "necessari": [20, 21, 22, 23, 25, 26, 27, 28, 29, 40], "sklearn": [20, 21, 22, 23, 25, 26, 27, 28, 29], "compat": [20, 21, 22, 23, 25, 26, 27, 28, 29], "linear_model": [20, 21, 22, 23, 25, 26, 27, 28, 29], "should": [20, 21, 22, 23, 25, 26, 27, 28, 29, 40], "coef_": [20, 21, 22, 23, 25, 26, 27, 28, 29], "attibut": [20, 21, 22, 23, 25, 26, 27, 28, 29], "after": [20, 21, 22, 23, 25, 26, 27, 28, 29], "fit_transform": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "fit_param": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "transform": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "version": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 45], "n_featur": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "input": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 42, 46], "sampl": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 48], "n_output": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "unsupervis": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "x_new": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "n_features_new": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "grad_coeff": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 36, 40], "gradient": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "resiz": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "new_shap": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "chang": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "output": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "set_output": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "see": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 40], "introduc": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "api": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "exampl": [20, 21, 24, 26, 27, 28, 29, 31, 33, 34, 35, 36, 37, 38, 39, 40, 45, 49, 50, 52], "how": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 34, 35, 38, 40, 42], "panda": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "configur": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "format": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "datafram": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "polar": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "unchang": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "4": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 36, 44, 45, 48], "ad": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "transform_x": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "finit": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 42, 49], "differ": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "transform_xx": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "hessian": [20, 21, 22, 23, 24, 25, 26, 27, 28, 29], "element": [22, 35, 42, 49], "build": [22, 28, 42, 49], "from": [22, 28, 36, 39, 40, 42, 46, 48, 50], "basi": 22, "order": [23, 36], "freq": [23, 36], "start_ord": 23, "seri": 23, "f": [23, 25, 31, 33, 34, 35, 37, 38, 44, 48, 49], "c": [23, 25, 36, 46, 47], "gamma": [24, 38], "kernel": 24, "rbf": 24, "gamma_rang": 24, "frame": [24, 49], "associ": [24, 40], "n_refer": 24, "dimension": 24, "row": 24, "correspond": 24, "singl": 24, "interpol": [24, 36], "iter": 24, "try": 24, "predict": 24, "spars": 24, "matrix": 24, "path": [24, 48], "along": 24, "z": 24, "distanc": 24, "deg": [26, 38], "polynom": [26, 36], "window": 26, "symbol": 26, "continu": 27, "slower": 27, "complet": [27, 42, 49], "take": [28, 40], "fonction": 28, "expose_param": 29, "wrap": 29, "predictor": 29, "allow": [29, 40], "non": [29, 40, 42], "parametr": [29, 31, 34, 38, 40, 42], "kei": [29, 36, 40], "expos": 29, "optimis": 29, "go": [31, 33, 34, 35, 36, 37, 38, 40, 44, 48, 49], "end": [31, 33, 34, 35, 36, 37, 38], "download": [31, 32, 33, 34, 35, 36, 37, 38, 44, 48], "full": [31, 33, 34, 35, 36, 37, 38], "code": [31, 32, 33, 34, 35, 36, 37, 38, 42], "import": [31, 33, 34, 35, 36, 37, 38, 44, 45, 46, 47, 48, 49], "numpi": [31, 33, 34, 35, 36, 37, 38, 44, 45, 46, 47, 48, 49], "np": [31, 33, 34, 35, 36, 37, 38, 40, 44, 45, 46, 47, 48, 49], "matplotlib": [31, 33, 34, 35, 36, 37, 38, 44, 45, 46, 47, 48, 49], "pyplot": [31, 33, 34, 35, 36, 37, 38, 44, 45, 46, 47, 48, 49], "plt": [31, 33, 34, 35, 36, 37, 38, 44, 45, 46, 47, 48, 49], "foli": [31, 33, 34, 35, 36, 37, 38, 40, 41, 44, 45, 46, 47, 48, 49], "fl": [31, 33, 34, 35, 36, 37, 38, 44, 45, 46, 47, 48, 49], "trouver": [31, 34, 35, 37, 38], "comment": [31, 34, 35, 37, 38, 48], "rentr": [31, 34, 35, 37, 38], "le": [31, 34, 35, 37, 38], "donn\u00e9": [31, 34, 35, 37, 38], "loadtxt": [31, 34, 35, 37, 38, 44, 48], "dataset": [31, 34, 35, 37, 38], "example_2d": [31, 34, 35, 37], "rang": [31, 34, 35, 36, 46, 47, 49], "append": [31, 34, 35, 37, 38, 44, 46, 47, 48, 49], "2": [31, 33, 34, 35, 36, 37, 38, 44, 45, 46, 47, 48, 49], "fun_lin": [31, 47], "fun_cst": [31, 38, 47], "dim_h": [31, 47], "emestim": [31, 47], "eulerdens": [31, 33, 34, 37, 40, 46, 47], "To": [31, 34, 38, 44, 48], "find": [31, 34, 38, 42], "histogram_bin_edg": [31, 34], "15": [31, 34, 47], "xfa": [31, 33, 34, 35, 38, 44, 48], "fig": [31, 33, 34, 35, 37, 38, 44, 45, 46, 47, 48], "ax": [31, 33, 34, 35, 36, 37, 38, 44, 45, 46, 47, 48, 49], "subplot": [31, 33, 34, 35, 36, 37, 38, 44, 45, 46, 47, 48, 49], "plot": [31, 33, 34, 35, 36, 37, 38, 44, 45, 46, 47, 48], "set_titl": [31, 33, 34, 35, 36, 37, 38, 44, 48], "set_xlabel": [31, 33, 34, 35, 36, 37, 38, 44, 46, 47, 48], "set_ylabel": [31, 33, 34, 35, 36, 37, 38, 44, 46, 47, 48], "reshap": [31, 33, 34, 35, 36, 38, 44, 48], "friction": [31, 38, 40], "e_2": 31, "d": [31, 33, 34, 35, 37, 38, 44, 48], "show": [31, 33, 34, 35, 36, 37, 38, 46, 47], "jupyt": [31, 32, 33, 34, 35, 36, 37, 38], "notebook": [31, 32, 33, 34, 35, 36, 37, 38, 51, 52], "example_em": [31, 39, 50], "ipynb": [31, 33, 34, 35, 36, 37, 38], "python": [31, 32, 33, 34, 35, 36, 37, 38, 45], "py": [31, 33, 34, 35, 36, 37, 38, 39, 45, 46, 48, 50], "galleri": [31, 32, 33, 34, 35, 36, 37, 38, 50], "sphinx": [31, 32, 33, 34, 35, 36, 37, 38], "introductori": 32, "auto_examples_python": 32, "zip": [32, 33, 37, 46, 47], "auto_examples_jupyt": 32, "23": 33, "43225293": 33, "99679345": 33, "33": [33, 46], "39778959": 33, "home": [33, 34, 37], "runner": [33, 34, 37], "overdamped_transitiondens": [33, 37, 40], "187": [33, 37], "runtimewarn": [33, 34, 37], "invalid": [33, 34, 37], "encount": [33, 34, 37], "divid": [33, 37], "temp": [33, 37], "exp": [33, 37], "mu_x": [33, 37], "190": 33, "log": [33, 34, 46, 47], "kt": 33, "ravel": [33, 34, 38, 44, 48], "41": 33, "31542403": 33, "212": 33, "sig": 33, "_model": [33, 40], "6": [33, 36, 44, 45, 46, 48, 49], "74610428e": 33, "33333739e": 33, "01": 33, "13144498e": 33, "69759012": 33, "24": 33, "02552553": 33, "61154024": 33, "34025708": 33, "32512202": 33, "34": [33, 45, 46, 48], "23350708": 33, "22": 33, "9766163": 33, "30368006": 33, "35493744": 33, "first": [33, 44, 45, 46, 48], "let": [33, 44, 45, 46, 48], "some": [33, 40, 45, 46, 52], "model_simu": [33, 45, 46, 47], "ornsteinuhlenbeck": [33, 45, 46, 47], "abmd_simul": [33, 45], "eulerstepp": [33, 45], "xstop": [33, 45], "5000": [33, 45, 46, 47], "zero": [33, 45, 46], "25": [33, 37, 45, 46, 47], "xmax": [33, 45], "concaten": [33, 45, 49], "xmax_hist": [33, 45], "axi": [33, 40, 45], "sphinx_gallery_thumbnail_numb": 33, "n": [33, 36, 37, 44, 45, 46, 47, 48], "enumer": [33, 37, 45, 46, 47], "linspac": [33, 35, 36, 37, 38, 44, 48], "7": [33, 39, 46, 48, 49, 50], "75": [33, 35, 44, 48], "remove_bia": 33, "label": [33, 37, 38, 46, 47], "transitioncl": [33, 37, 46, 47], "shojiozaki": [33, 37, 46], "ozakidens": [33, 37, 40, 46], "shojiozakidens": [33, 37, 40, 46], "eleriandens": [33, 37, 40, 46], "kesslerdens": [33, 37, 40, 46], "drozdovdens": [33, 37, 40, 46], "likelihoodestim": [33, 34, 46], "re": [33, 46, 47], "print": [33, 38, 44, 46, 48, 49], "legend": [33, 37, 46, 47], "total": [33, 34, 35, 36, 37, 38, 39, 50], "time": [33, 34, 35, 36, 37, 38, 40, 48], "script": [33, 34, 35, 36, 37, 38], "minut": [33, 34, 35, 36, 37, 38], "434": [33, 39, 50], "second": [33, 34, 35, 36, 37, 38], "plot_biased": [33, 39, 50], "transitiondens": [34, 40], "20": 34, "ll": 34, "5": [34, 36, 37, 44, 46, 48, 49], "xt": 34, "v": [34, 38], "pi": 34, "fun": [34, 35, 36, 38], "533": [34, 39, 48, 50], "plot_exampl": [34, 39, 50], "fem": 35, "skfem": 35, "stat": [35, 38, 44, 48], "min": [35, 38, 44, 48], "max": [35, 38, 44, 48], "n_knot": 35, "epsilon": 35, "mesheddomain": [35, 36, 44, 48], "create_from_rang": [35, 36, 44, 48], "finiteel": 35, "elementlinep1": 35, "bsplinesfunct": [35, 36], "kramersmoyalestim": [35, 44, 48], "959": [35, 39, 50], "plot_fem": [35, 39, 50], "we": [36, 40, 41, 43, 44, 45, 46, 48, 49], "subset": 36, "ff": 36, "splrep": 36, "x_rang": 36, "30": 36, "fun_set": 36, "polynomi": [36, 38], "hermit": 36, "fourier": 36, "fig_kernel": 36, "m": [36, 48], "item": 36, "h_k": 36, "256": [36, 39, 50], "plot_funct": [36, 39, 50], "brownianmot": 37, "force_rang": 37, "diff_rang": 37, "likelihood_vals_forc": 37, "zeros_lik": 37, "likelihood_vals_diff": 37, "991": [37, 39, 48, 50], "plot_likelihood": [37, 39, 50], "14456797": 38, "09360271": 38, "17903578": 38, "41497433": 38, "67493048": 38, "03822764": 38, "example_underdamped2": 38, "phase": 38, "underdamp": 38, "underdampedkramersmoyalestim": 38, "150": 38, "ones_lik": 38, "338": [38, 39, 50], "plot_underdamp": [38, 39, 50], "00": [39, 50], "12": [39, 50], "512": [39, 50], "execut": [39, 50], "file": [39, 40, 44, 46, 48, 50], "auto_exampl": 39, "mem": [39, 50], "mb": [39, 50], "07": [39, 50], "02": [39, 50], "000": [39, 50], "git": [40, 42], "clone": 40, "github": [40, 42], "com": [40, 42], "langevinmodel": [40, 42], "cd": 40, "pip": [40, 42, 45], "instal": [40, 45], "packag": [40, 45, 48], "local": [40, 45, 48], "inherit": 40, "sinc": [40, 49], "ar": [40, 44, 45, 48, 49], "flexibl": 40, "thei": [40, 45], "your": 40, "specif": 40, "you": [40, 42], "follow": [40, 48], "approach": 40, "main": 40, "simpli": 40, "describ": [40, 49], "There": [40, 45], "also": [40, 42, 44, 45, 48], "evolut": 40, "As": [40, 45], "mainli": 40, "collect": [40, 42], "attribut": 40, "complic": 40, "behavior": 40, "exempl": 40, "mean": 40, "sum": 40, "its": [40, 49], "veloc": 40, "mecan": 40, "modeloverlai": 40, "particular": 40, "interfac": 40, "adn": 40, "easi": 40, "composit": 40, "mycompon": 40, "_mycompon": 40, "_mycomponent_coeff": 40, "unifi": 40, "irrespect": 40, "theirs": 40, "definit": [40, 45], "core": 40, "part": [40, 42], "descript": [40, 42], "numpydoc": 40, "style": 40, "back": 40, "meanestim": 40, "would": 40, "look": 40, "simpleestim": 40, "r": [40, 46], "It": 40, "footcit": 40, "author1991": 40, "over": 40, "last": [40, 45, 46, 48], "footbibliographi": 40, "def": 40, "__init__": [40, 45, 46], "super": 40, "perform": [40, 45], "meanmodel": 40, "note": 40, "citat": 40, "global": 40, "bibtex": 40, "under": [40, 49], "doc": 40, "bib": 40, "These": 40, "includ": 40, "websit": 40, "host": 40, "via": [40, 49], "page": [40, 42], "pleas": [40, 42, 45], "readm": 40, "instruct": 40, "section": 41, "goal": 41, "orient": 41, "onc": [41, 43], "obtain": [41, 44, 45, 48, 49], "extract": [41, 43], "quantiti": [41, 43], "infer": [42, 48, 51], "intend": 42, "provid": [42, 49], "modul": [42, 45, 48], "librari": 42, "http": [42, 48], "want": 42, "optionn": 42, "torch": 42, "pattern": 42, "load": [42, 44, 48, 49], "analys": 42, "guid": 42, "analysi": [42, 44, 48], "For": [42, 45], "developp": 42, "parameter": 42, "direct": [42, 48], "index": 42, "search": 42, "don": [44, 48], "forget": [44, 48], "adapt": [44, 48], "locat": [44, 48], "0e": [44, 48], "molecul": [44, 48, 49], "check": [44, 48], "what": [44, 48], "Then": [44, 48], "here": [44, 45, 48], "1d": [44, 48], "start": [44, 45, 48], "kramersmoy": [44, 48], "overdampedsplines1d": [44, 48], "profil": [44, 48], "lt": [44, 45, 48], "line": [44, 46, 48], "line2d": [44, 48], "0x7fdeb7139540": [44, 48], "gt": [44, 45, 46, 48], "0x7fdeb7223f70": [44, 48], "But": [44, 48], "pmf": [44, 48], "free_energy_profile_1d": [44, 48], "u": [44, 48], "0x7fdeb72c21a0": [44, 48], "howev": 45, "due": 45, "mostli": 45, "orin": 45, "toward": 45, "short": 45, "valid": 45, "effici": 45, "longuer": 45, "turn": 45, "langevinintegr": 45, "jl": 45, "stochasticdiffeq": 45, "futur": 45, "plan": 45, "write": 45, "within": 45, "framemwork": 45, "usr": [45, 48], "lib": [45, 48], "python3": [45, 48], "dist": [45, 48], "project": 45, "63": 45, "userwarn": 45, "unabl": 45, "axes3d": 45, "mai": 45, "multipl": 45, "being": 45, "system": [45, 49, 52], "3d": 45, "warn": 45, "instanci": 45, "stepper": 45, "choic": 45, "probabl": 45, "choos": 45, "normal": [45, 47], "distribut": 45, "x0": [45, 46], "random": [45, 47], "randn": 45, "typeerror": 45, "traceback": [45, 46, 48], "recent": [45, 46, 48], "tmp": [45, 48], "ipykernel_5163": 45, "3606355413": 45, "mtrand": 45, "pyx": 45, "randomst": 45, "standard_norm": 45, "_common": 45, "cont": 45, "39": [45, 48], "cannot": 45, "interpret": 45, "integ": 45, "test": 45, "adiabat": 45, "modelcular": 45, "data_bias": 45, "variou": 46, "timestep": [46, 49, 51], "data_dt": [46, 47], "list_dt": [46, 47], "5e": [46, 47], "exactstepp": [46, 47], "valueerror": 46, "cell": 46, "exactdens": 46, "projet": 46, "nstep": 46, "ntraj": 46, "save_everi": 46, "32": 46, "run_step": 46, "dw": 46, "x_val": 46, "35": 46, "36": 46, "could": 46, "broadcast": 46, "len": [46, 47], "coeffs_val": [46, 47], "empti": [46, 47], "ab": [46, 47], "set_yscal": [46, 47], "delta": [46, 47], "c_": [46, 47], "real": [46, 47], "keep_dim": 47, "loc": 47, "scale": 47, "size": 47, "fun_frct": 47, "tutori": 48, "experiment": 48, "articl": 48, "quantifi": 48, "nonproduct": 48, "attempt": 48, "thermal": 48, "activ": 48, "barrier": 48, "cross": 48, "through": 48, "observ": 48, "aaron": 48, "lyon": 48, "anita": 48, "devi": 48, "noel": 48, "hoffer": 48, "michael": 48, "woodsid": 48, "phy": 48, "rev": 48, "14": [48, 49], "011017": 48, "doi": 48, "org": 48, "6084": 48, "m9": 48, "figshar": 48, "24794955": 48, "frequenc": 48, "1mhz": 48, "unit": 48, "lyons_etal_prx_2023_data": 48, "hp_cf_mol": 48, "_sampletrajectori": 48, "txt": 48, "filenotfounderror": 48, "ipykernel_11040": 48, "347796182": 48, "8": 48, "npyio": 48, "fname": 48, "delimit": 48, "convert": 48, "skiprow": 48, "usecol": 48, "unpack": 48, "ndmin": 48, "encod": 48, "max_row": 48, "quotechar": 48, "1371": 48, "decod": 48, "latin1": 48, "1372": 48, "1373": 48, "arr": 48, "_read": 48, "1374": 48, "skiplin": 48, "1375": 48, "quot": 48, "imaginary_unit": 48, "990": 48, "o": 48, "fspath": 48, "isinst": 48, "str": 48, "992": 48, "fh": [48, 49], "_datasourc": 48, "open": 48, "rt": 48, "993": 48, "994": 48, "getattr": 48, "mode": 48, "destpath": 48, "newlin": 48, "191": 48, "192": 48, "datasourc": 48, "193": 48, "194": 48, "195": 48, "531": 48, "532": 48, "els": 48, "rais": 48, "found": 48, "534": 48, "535": 48, "hp_cf_mol1_sampletrajectori": 48, "next": 48, "step": 48, "fold": 48, "unfold": 48, "rate": 48, "And": 48, "committor": 48, "studi": 49, "small": 49, "peptid": 49, "exhibit": 49, "rare": 49, "event": 49, "solut": 49, "room": 49, "temperatur": 49, "\u03d5": 49, "\u03c8": 49, "dihedr": 49, "angl": 49, "been": 49, "identifi": 49, "two": 49, "relev": 49, "coordin": 49, "slowest": 49, "kinet": 49, "equilibrium": 49, "condit": 49, "mdshare": 49, "thank": 49, "molecular": 49, "biologi": 49, "group": 49, "freie": 49, "universit\u00e4t": 49, "berlin": 49, "ger": 49, "dihedral_fil": 49, "3x250n": 49, "backbon": 49, "npz": 49, "working_directori": 49, "arr_": 49, "plane": 49, "visual": 49, "state": 49, "popul": 49, "hb": 49, "hexbin": 49, "mincnt": 49, "set_aspect": 49, "equal": 49, "cb": 49, "colorbar": 49, "set_label": 49, "13": 49, "1p": 49, "250000": 49, "length": 49, "2d": 49, "explor": 51, "longer": 52}, "objects": {"folie": [[3, 0, 1, "", "BrownianMotion"], [4, 0, 1, "", "DrozdovDensity"], [5, 0, 1, "", "ELBOEstimator"], [6, 0, 1, "", "EMEstimator"], [7, 0, 1, "", "ElerianDensity"], [8, 0, 1, "", "EulerDensity"], [9, 0, 1, "", "ExactDensity"], [10, 0, 1, "", "KesslerDensity"], [11, 0, 1, "", "KramersMoyalEstimator"], [12, 0, 1, "", "LikelihoodEstimator"], [13, 0, 1, "", "OrnsteinUhlenbeck"], [14, 0, 1, "", "Overdamped"], [15, 0, 1, "", "OverdampedFreeEnergy"], [16, 3, 1, "", "OverdampedSplines1D"], [17, 0, 1, "", "OzakiDensity"], [18, 0, 1, "", "ShojiOzakiDensity"], [19, 3, 1, "", "Trajectories"]], "folie.BrownianMotion": [[3, 1, 1, "", "coefficients"], [3, 1, 1, "", "coefficients_diffusion"], [3, 1, 1, "", "coefficients_force"], [3, 1, 1, "", "coefficients_meandispl"], [3, 2, 1, "", "copy"], [3, 1, 1, "", "dim"], [3, 2, 1, "", "exact_step"], [3, 2, 1, "", "get_params"], [3, 1, 1, "", "has_exact_density"], [3, 2, 1, "", "set_params"]], "folie.DrozdovDensity": [[4, 2, 1, "", "check_dim"], [4, 1, 1, "", "model"], [4, 2, 1, "", "preprocess_traj"]], "folie.ELBOEstimator": [[5, 2, 1, "", "fetch_model"], [5, 2, 1, "", "fit"], [5, 2, 1, "", "fit_fetch"], [5, 2, 1, "", "get_params"], [5, 1, 1, "", "has_model"], [5, 1, 1, "", "model"], [5, 2, 1, "", "set_params"]], "folie.EMEstimator": [[6, 2, 1, "", "fetch_model"], [6, 2, 1, "", "fit"], [6, 2, 1, "", "fit_fetch"], [6, 2, 1, "", "get_params"], [6, 1, 1, "", "has_model"], [6, 1, 1, "", "model"], [6, 2, 1, "", "set_params"]], "folie.ElerianDensity": [[7, 2, 1, "", "check_dim"], [7, 2, 1, "", "e_step"], [7, 2, 1, "", "hiddencorrection"], [7, 1, 1, "", "model"], [7, 2, 1, "", "preprocess_traj"]], "folie.EulerDensity": [[8, 2, 1, "", "check_dim"], [8, 2, 1, "", "e_step"], [8, 2, 1, "", "hiddencorrection"], [8, 1, 1, "", "model"], [8, 2, 1, "", "preprocess_traj"]], "folie.ExactDensity": [[9, 2, 1, "", "check_dim"], [9, 1, 1, "", "model"], [9, 2, 1, "", "preprocess_traj"]], "folie.KesslerDensity": [[10, 2, 1, "", "check_dim"], [10, 1, 1, "", "model"], [10, 2, 1, "", "preprocess_traj"]], "folie.KramersMoyalEstimator": [[11, 2, 1, "", "fetch_model"], [11, 2, 1, "", "fit"], [11, 2, 1, "", "fit_fetch"], [11, 2, 1, "", "get_params"], [11, 1, 1, "", "has_model"], [11, 1, 1, "", "model"], [11, 2, 1, "", "preprocess_traj"], [11, 2, 1, "", "set_params"]], "folie.LikelihoodEstimator": [[12, 2, 1, "", "fetch_model"], [12, 2, 1, "", "fit"], [12, 2, 1, "", "fit_fetch"], [12, 2, 1, "", "get_params"], [12, 1, 1, "", "has_model"], [12, 1, 1, "", "model"], [12, 2, 1, "", "set_params"]], "folie.OrnsteinUhlenbeck": [[13, 1, 1, "", "coefficients"], [13, 1, 1, "", "coefficients_diffusion"], [13, 1, 1, "", "coefficients_force"], [13, 1, 1, "", "coefficients_meandispl"], [13, 2, 1, "", "copy"], [13, 1, 1, "", "dim"], [13, 2, 1, "", "get_params"], [13, 1, 1, "", "has_exact_density"], [13, 2, 1, "", "set_params"]], "folie.Overdamped": [[14, 1, 1, "", "coefficients"], [14, 1, 1, "", "coefficients_diffusion"], [14, 1, 1, "", "coefficients_force"], [14, 1, 1, "", "coefficients_meandispl"], [14, 2, 1, "", "copy"], [14, 1, 1, "", "dim"], [14, 2, 1, "", "get_params"], [14, 1, 1, "", "has_exact_density"], [14, 2, 1, "", "set_params"]], "folie.OverdampedFreeEnergy": [[15, 1, 1, "", "coefficients"], [15, 1, 1, "", "coefficients_diffusion"], [15, 1, 1, "", "coefficients_force"], [15, 1, 1, "", "coefficients_meandispl"], [15, 2, 1, "", "copy"], [15, 1, 1, "", "dim"], [15, 2, 1, "", "get_params"], [15, 1, 1, "", "has_exact_density"], [15, 2, 1, "", "preprocess_traj"], [15, 2, 1, "", "set_params"]], "folie.OzakiDensity": [[17, 2, 1, "", "check_dim"], [17, 1, 1, "", "model"], [17, 2, 1, "", "preprocess_traj"]], "folie.ShojiOzakiDensity": [[18, 2, 1, "", "check_dim"], [18, 1, 1, "", "model"], [18, 2, 1, "", "preprocess_traj"]], "folie.functions": [[20, 0, 1, "", "BSplinesFunction"], [21, 0, 1, "", "Constant"], [22, 0, 1, "", "FiniteElement"], [23, 0, 1, "", "Fourier"], [24, 0, 1, "", "KernelFunction"], [25, 0, 1, "", "Linear"], [26, 0, 1, "", "Polynomial"], [27, 0, 1, "", "sklearnBSplines"], [28, 0, 1, "", "sklearnTransformer"], [29, 0, 1, "", "sklearnWrapper"]], "folie.functions.BSplinesFunction": [[20, 1, 1, "", "coefficients"], [20, 2, 1, "", "copy"], [20, 2, 1, "", "differentiate"], [20, 2, 1, "", "fit"], [20, 2, 1, "", "fit_transform"], [20, 2, 1, "", "get_params"], [20, 2, 1, "", "grad_coeffs"], [20, 2, 1, "", "resize"], [20, 2, 1, "", "set_output"], [20, 2, 1, "", "set_params"], [20, 2, 1, "", "transform"], [20, 2, 1, "", "transform_x"], [20, 2, 1, "", "transform_xx"]], "folie.functions.Constant": [[21, 1, 1, "", "coefficients"], [21, 2, 1, "", "copy"], [21, 2, 1, "", "differentiate"], [21, 2, 1, "", "fit"], [21, 2, 1, "", "fit_transform"], [21, 2, 1, "", "get_params"], [21, 2, 1, "", "grad_coeffs"], [21, 2, 1, "", "resize"], [21, 2, 1, "", "set_output"], [21, 2, 1, "", "set_params"], [21, 2, 1, "", "transform"], [21, 2, 1, "", "transform_x"], [21, 2, 1, "", "transform_xx"]], "folie.functions.FiniteElement": [[22, 1, 1, "", "coefficients"], [22, 2, 1, "", "copy"], [22, 2, 1, "", "differentiate"], [22, 2, 1, "", "fit"], [22, 2, 1, "", "fit_transform"], [22, 2, 1, "", "get_params"], [22, 2, 1, "", "grad_coeffs"], [22, 2, 1, "", "resize"], [22, 2, 1, "", "set_output"], [22, 2, 1, "", "set_params"], [22, 2, 1, "", "transform"], [22, 2, 1, "", "transform_x"], [22, 2, 1, "", "transform_xx"]], "folie.functions.Fourier": [[23, 1, 1, "", "coefficients"], [23, 2, 1, "", "copy"], [23, 2, 1, "", "differentiate"], [23, 2, 1, "", "fit"], [23, 2, 1, "", "fit_transform"], [23, 2, 1, "", "get_params"], [23, 2, 1, "", "grad_coeffs"], [23, 2, 1, "", "resize"], [23, 2, 1, "", "set_output"], [23, 2, 1, "", "set_params"], [23, 2, 1, "", "transform"], [23, 2, 1, "", "transform_x"], [23, 2, 1, "", "transform_xx"]], "folie.functions.KernelFunction": [[24, 1, 1, "", "coefficients"], [24, 2, 1, "", "copy"], [24, 2, 1, "", "differentiate"], [24, 2, 1, "", "fit"], [24, 2, 1, "", "fit_transform"], [24, 2, 1, "", "get_params"], [24, 2, 1, "", "grad_coeffs"], [24, 2, 1, "", "resize"], [24, 2, 1, "", "set_output"], [24, 2, 1, "", "set_params"], [24, 2, 1, "", "transform"], [24, 2, 1, "", "transform_x"], [24, 2, 1, "", "transform_xx"]], "folie.functions.Linear": [[25, 1, 1, "", "coefficients"], [25, 2, 1, "", "copy"], [25, 2, 1, "", "differentiate"], [25, 2, 1, "", "fit"], [25, 2, 1, "", "fit_transform"], [25, 2, 1, "", "get_params"], [25, 2, 1, "", "grad_coeffs"], [25, 2, 1, "", "resize"], [25, 2, 1, "", "set_output"], [25, 2, 1, "", "set_params"], [25, 2, 1, "", "transform"], [25, 2, 1, "", "transform_x"], [25, 2, 1, "", "transform_xx"]], "folie.functions.Polynomial": [[26, 1, 1, "", "coefficients"], [26, 2, 1, "", "copy"], [26, 2, 1, "", "differentiate"], [26, 2, 1, "", "fit"], [26, 2, 1, "", "fit_transform"], [26, 2, 1, "", "get_params"], [26, 2, 1, "", "grad_coeffs"], [26, 2, 1, "", "resize"], [26, 2, 1, "", "set_output"], [26, 2, 1, "", "set_params"], [26, 2, 1, "", "transform"], [26, 2, 1, "", "transform_x"], [26, 2, 1, "", "transform_xx"]], "folie.functions.sklearnBSplines": [[27, 1, 1, "", "coefficients"], [27, 2, 1, "", "copy"], [27, 2, 1, "", "differentiate"], [27, 2, 1, "", "fit"], [27, 2, 1, "", "fit_transform"], [27, 2, 1, "", "get_params"], [27, 2, 1, "", "grad_coeffs"], [27, 2, 1, "", "resize"], [27, 2, 1, "", "set_output"], [27, 2, 1, "", "set_params"], [27, 2, 1, "", "transform"], [27, 2, 1, "", "transform_x"], [27, 2, 1, "", "transform_xx"]], "folie.functions.sklearnTransformer": [[28, 1, 1, "", "coefficients"], [28, 2, 1, "", "copy"], [28, 2, 1, "", "differentiate"], [28, 2, 1, "", "fit"], [28, 2, 1, "", "fit_transform"], [28, 2, 1, "", "get_params"], [28, 2, 1, "", "grad_coeffs"], [28, 2, 1, "", "resize"], [28, 2, 1, "", "set_output"], [28, 2, 1, "", "set_params"], [28, 2, 1, "", "transform"], [28, 2, 1, "", "transform_x"], [28, 2, 1, "", "transform_xx"]], "folie.functions.sklearnWrapper": [[29, 1, 1, "", "coefficients"], [29, 2, 1, "", "copy"], [29, 2, 1, "", "differentiate"], [29, 2, 1, "", "fit"], [29, 2, 1, "", "fit_transform"], [29, 2, 1, "", "get_params"], [29, 2, 1, "", "grad_coeffs"], [29, 2, 1, "", "resize"], [29, 2, 1, "", "set_output"], [29, 2, 1, "", "set_params"], [29, 2, 1, "", "transform"], [29, 2, 1, "", "transform_x"], [29, 2, 1, "", "transform_xx"]]}, "objtypes": {"0": "py:class", "1": "py:property", "2": "py:method", "3": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "property", "Python property"], "2": ["py", "method", "Python method"], "3": ["py", "function", "Python function"]}, "titleterms": {"data": [0, 40], "load": 0, "trajectori": [0, 19, 40], "estim": [1, 31, 34, 35, 38, 40, 41, 44], "direct": 1, "likelihood": [1, 37, 40], "overdamp": [1, 14, 31, 34, 35, 38, 44, 46, 47], "transit": [1, 40], "densiti": [1, 40], "spatial": 2, "depend": 2, "parameter": 2, "function": [2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 36, 37, 40], "non": 2, "parametr": 2, "foli": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 42], "brownianmot": 3, "exampl": [3, 4, 6, 7, 8, 10, 11, 12, 13, 14, 17, 18, 19, 22, 23, 25, 32], "us": [3, 4, 6, 7, 8, 10, 11, 12, 13, 14, 17, 18, 19, 22, 23, 25, 40], "drozdovdens": 4, "elboestim": 5, "emestim": 6, "eleriandens": 7, "eulerdens": 8, "exactdens": 9, "kesslerdens": 10, "kramersmoyalestim": 11, "likelihoodestim": 12, "ornsteinuhlenbeck": 13, "overdampedfreeenergi": 15, "overdampedsplines1d": 16, "ozakidens": 17, "shojiozakidens": 18, "bsplinesfunct": 20, "constant": 21, "finiteel": 22, "fourier": 23, "kernelfunct": 24, "linear": 25, "polynomi": 26, "sklearnbsplin": 27, "sklearntransform": 28, "sklearnwrapp": 29, "model": [30, 40, 43, 44, 45], "langevin": [30, 31, 34, 35, 38, 40], "dynam": [30, 33, 40], "avail": 30, "equat": 30, "hidden": [31, 47], "gener": 32, "abmd": 33, "bias": 33, "set": 36, "comput": [39, 50], "time": [39, 50], "For": 40, "developp": 40, "input": 40, "build": 40, "an": 40, "write": 40, "new": 40, "document": [40, 42], "code": 40, "how": 41, "guid": 41, "analysi": [41, 43], "welcom": 42, "": 42, "instal": 42, "get": 42, "start": 42, "tabl": 42, "content": 42, "api": 42, "doc": 42, "indic": 42, "obtain": 43, "simul": 45, "variabl": 47, "dna": 48, "hairpin": 48, "alanin": 49, "dipeptid": 49, "statist": 51, "perform": 51, "tutori": 52}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "nbsphinx": 4, "sphinx": 60}, "alltitles": {"Data loading": [[0, "data-loading"]], "Loading trajectories": [[0, "loading-trajectories"]], "Estimation": [[1, "estimation"], [41, "estimation"]], "Direct estimation": [[1, "direct-estimation"]], "Likelihood estimation": [[1, "likelihood-estimation"]], "Overdamped Transition density": [[1, "overdamped-transition-density"]], "Spatial dependence": [[2, "spatial-dependence"]], "Parameteric Functions": [[2, "parameteric-functions"]], "Non Parametric Functions": [[2, "non-parametric-functions"]], "folie.BrownianMotion": [[3, "folie-brownianmotion"]], "Examples using folie.BrownianMotion": [[3, "examples-using-folie-brownianmotion"]], "folie.DrozdovDensity": [[4, "folie-drozdovdensity"]], "Examples using folie.DrozdovDensity": [[4, "examples-using-folie-drozdovdensity"]], "folie.ELBOEstimator": [[5, "folie-elboestimator"]], "folie.EMEstimator": [[6, "folie-emestimator"]], "Examples using folie.EMEstimator": [[6, "examples-using-folie-emestimator"]], "folie.ElerianDensity": [[7, "folie-eleriandensity"]], "Examples using folie.ElerianDensity": [[7, "examples-using-folie-eleriandensity"]], "folie.EulerDensity": [[8, "folie-eulerdensity"]], "Examples using folie.EulerDensity": [[8, "examples-using-folie-eulerdensity"]], "folie.ExactDensity": [[9, "folie-exactdensity"]], "folie.KesslerDensity": [[10, "folie-kesslerdensity"]], "Examples using folie.KesslerDensity": [[10, "examples-using-folie-kesslerdensity"]], "folie.KramersMoyalEstimator": [[11, "folie-kramersmoyalestimator"]], "Examples using folie.KramersMoyalEstimator": [[11, "examples-using-folie-kramersmoyalestimator"]], "folie.LikelihoodEstimator": [[12, "folie-likelihoodestimator"]], "Examples using folie.LikelihoodEstimator": [[12, "examples-using-folie-likelihoodestimator"]], "folie.OrnsteinUhlenbeck": [[13, "folie-ornsteinuhlenbeck"]], "Examples using folie.OrnsteinUhlenbeck": [[13, "examples-using-folie-ornsteinuhlenbeck"]], "folie.Overdamped": [[14, "folie-overdamped"]], "Examples using folie.Overdamped": [[14, "examples-using-folie-overdamped"]], "folie.OverdampedFreeEnergy": [[15, "folie-overdampedfreeenergy"]], "folie.OverdampedSplines1D": [[16, "folie-overdampedsplines1d"]], "folie.OzakiDensity": [[17, "folie-ozakidensity"]], "Examples using folie.OzakiDensity": [[17, "examples-using-folie-ozakidensity"]], "folie.ShojiOzakiDensity": [[18, "folie-shojiozakidensity"]], "Examples using folie.ShojiOzakiDensity": [[18, "examples-using-folie-shojiozakidensity"]], "folie.Trajectories": [[19, "folie-trajectories"]], "Examples using folie.Trajectories": [[19, "examples-using-folie-trajectories"]], "folie.functions.BSplinesFunction": [[20, "folie-functions-bsplinesfunction"]], "folie.functions.Constant": [[21, "folie-functions-constant"]], "folie.functions.FiniteElement": [[22, "folie-functions-finiteelement"]], "Examples using folie.functions.FiniteElement": [[22, "examples-using-folie-functions-finiteelement"]], "folie.functions.Fourier": [[23, "folie-functions-fourier"]], "Examples using folie.functions.Fourier": [[23, "examples-using-folie-functions-fourier"]], "folie.functions.KernelFunction": [[24, "folie-functions-kernelfunction"]], "folie.functions.Linear": [[25, "folie-functions-linear"]], "Examples using folie.functions.Linear": [[25, "examples-using-folie-functions-linear"]], "folie.functions.Polynomial": [[26, "folie-functions-polynomial"]], "folie.functions.sklearnBSplines": [[27, "folie-functions-sklearnbsplines"]], "folie.functions.sklearnTransformer": [[28, "folie-functions-sklearntransformer"]], "folie.functions.sklearnWrapper": [[29, "folie-functions-sklearnwrapper"]], "Models of Langevin dynamics": [[30, "models-of-langevin-dynamics"]], "Available models of Langevin equation": [[30, "available-models-of-langevin-equation"]], "Hidden Overdamped Langevin Estimation": [[31, "hidden-overdamped-langevin-estimation"]], "General examples": [[32, "general-examples"]], "ABMD biased dynamics": [[33, "abmd-biased-dynamics"]], "Overdamped Langevin Estimation": [[34, "overdamped-langevin-estimation"], [35, "overdamped-langevin-estimation"], [38, "overdamped-langevin-estimation"]], "Functional set": [[36, "functional-set"]], "Likelihood functions": [[37, "likelihood-functions"]], "Computation times": [[39, "computation-times"], [50, "computation-times"]], "For developper": [[40, "for-developper"]], "Input of trajectories data": [[40, "input-of-trajectories-data"]], "Building an estimator of Langevin dynamics": [[40, "building-an-estimator-of-langevin-dynamics"]], "Likelihood estimation: using Transition density": [[40, "likelihood-estimation-using-transition-density"]], "Writing a new estimator": [[40, "writing-a-new-estimator"]], "Model of Langevin Dynamics": [[40, "model-of-langevin-dynamics"]], "Writing a new model": [[40, "writing-a-new-model"]], "Writing a new function": [[40, "writing-a-new-function"]], "Documenting the code": [[40, "documenting-the-code"]], "How-to guides": [[41, "how-to-guides"]], "Analysis": [[41, "analysis"]], "Welcome to folie\u2019s documentation!": [[42, "welcome-to-folie-s-documentation"]], "Installation": [[42, "installation"]], "Getting Started": [[42, "getting-started"]], "Table of contents": [[42, "table-of-contents"]], "Documentation": [[42, null]], "API docs": [[42, null]], "Indices and tables": [[42, "indices-and-tables"]], "Analysis of obtained models": [[43, "Analysis-of-obtained-models"]], "Estimation of overdamped model": [[44, "Estimation-of-overdamped-model"]], "Models simulations": [[45, "Models-simulations"]], "Overdamped": [[46, "Overdamped"]], "Overdamped with hidden variables": [[47, "Overdamped-with-hidden-variables"]], "DNA Hairpin": [[48, "DNA-Hairpin"]], "Alanine Dipeptide": [[49, "Alanine-Dipeptide"]], "Statistical performances": [[51, "statistical-performances"]], "Tutorials": [[52, "tutorials"]]}, "indexentries": {"brownianmotion (class in folie)": [[3, "folie.BrownianMotion"]], "coefficients (folie.brownianmotion property)": [[3, "folie.BrownianMotion.coefficients"]], "coefficients_diffusion (folie.brownianmotion property)": [[3, "folie.BrownianMotion.coefficients_diffusion"]], "coefficients_force (folie.brownianmotion property)": [[3, "folie.BrownianMotion.coefficients_force"]], "coefficients_meandispl (folie.brownianmotion property)": [[3, "folie.BrownianMotion.coefficients_meandispl"]], "copy() (folie.brownianmotion method)": [[3, "folie.BrownianMotion.copy"]], "dim (folie.brownianmotion property)": [[3, "folie.BrownianMotion.dim"]], "exact_step() (folie.brownianmotion method)": [[3, "folie.BrownianMotion.exact_step"]], "get_params() (folie.brownianmotion method)": [[3, "folie.BrownianMotion.get_params"]], "has_exact_density (folie.brownianmotion property)": [[3, "folie.BrownianMotion.has_exact_density"]], "set_params() (folie.brownianmotion method)": [[3, "folie.BrownianMotion.set_params"]], "drozdovdensity (class in folie)": [[4, "folie.DrozdovDensity"]], "check_dim() (folie.drozdovdensity method)": [[4, "folie.DrozdovDensity.check_dim"]], "model (folie.drozdovdensity property)": [[4, "folie.DrozdovDensity.model"]], "preprocess_traj() (folie.drozdovdensity method)": [[4, "folie.DrozdovDensity.preprocess_traj"]], "elboestimator (class in folie)": [[5, "folie.ELBOEstimator"]], "fetch_model() (folie.elboestimator method)": [[5, "folie.ELBOEstimator.fetch_model"]], "fit() (folie.elboestimator method)": [[5, "folie.ELBOEstimator.fit"]], "fit_fetch() (folie.elboestimator method)": [[5, "folie.ELBOEstimator.fit_fetch"]], "get_params() (folie.elboestimator method)": [[5, "folie.ELBOEstimator.get_params"]], "has_model (folie.elboestimator property)": [[5, "folie.ELBOEstimator.has_model"]], "model (folie.elboestimator property)": [[5, "folie.ELBOEstimator.model"]], "set_params() (folie.elboestimator method)": [[5, "folie.ELBOEstimator.set_params"]], "emestimator (class in folie)": [[6, "folie.EMEstimator"]], "fetch_model() (folie.emestimator method)": [[6, "folie.EMEstimator.fetch_model"]], "fit() (folie.emestimator method)": [[6, "folie.EMEstimator.fit"]], "fit_fetch() (folie.emestimator method)": [[6, "folie.EMEstimator.fit_fetch"]], "get_params() (folie.emestimator method)": [[6, "folie.EMEstimator.get_params"]], "has_model (folie.emestimator property)": [[6, "folie.EMEstimator.has_model"]], "model (folie.emestimator property)": [[6, "folie.EMEstimator.model"]], "set_params() (folie.emestimator method)": [[6, "folie.EMEstimator.set_params"]], "eleriandensity (class in folie)": [[7, "folie.ElerianDensity"]], "check_dim() (folie.eleriandensity method)": [[7, "folie.ElerianDensity.check_dim"]], "e_step() (folie.eleriandensity method)": [[7, "folie.ElerianDensity.e_step"]], "hiddencorrection() (folie.eleriandensity method)": [[7, "folie.ElerianDensity.hiddencorrection"]], "model (folie.eleriandensity property)": [[7, "folie.ElerianDensity.model"]], "preprocess_traj() (folie.eleriandensity method)": [[7, "folie.ElerianDensity.preprocess_traj"]], "eulerdensity (class in folie)": [[8, "folie.EulerDensity"]], "check_dim() (folie.eulerdensity method)": [[8, "folie.EulerDensity.check_dim"]], "e_step() (folie.eulerdensity method)": [[8, "folie.EulerDensity.e_step"]], "hiddencorrection() (folie.eulerdensity method)": [[8, "folie.EulerDensity.hiddencorrection"]], "model (folie.eulerdensity property)": [[8, "folie.EulerDensity.model"]], "preprocess_traj() (folie.eulerdensity method)": [[8, "folie.EulerDensity.preprocess_traj"]], "exactdensity (class in folie)": [[9, "folie.ExactDensity"]], "check_dim() (folie.exactdensity method)": [[9, "folie.ExactDensity.check_dim"]], "model (folie.exactdensity property)": [[9, "folie.ExactDensity.model"]], "preprocess_traj() (folie.exactdensity method)": [[9, "folie.ExactDensity.preprocess_traj"]], "kesslerdensity (class in folie)": [[10, "folie.KesslerDensity"]], "check_dim() (folie.kesslerdensity method)": [[10, "folie.KesslerDensity.check_dim"]], "model (folie.kesslerdensity property)": [[10, "folie.KesslerDensity.model"]], "preprocess_traj() (folie.kesslerdensity method)": [[10, "folie.KesslerDensity.preprocess_traj"]], "kramersmoyalestimator (class in folie)": [[11, "folie.KramersMoyalEstimator"]], "fetch_model() (folie.kramersmoyalestimator method)": [[11, "folie.KramersMoyalEstimator.fetch_model"]], "fit() (folie.kramersmoyalestimator method)": [[11, "folie.KramersMoyalEstimator.fit"]], "fit_fetch() (folie.kramersmoyalestimator method)": [[11, "folie.KramersMoyalEstimator.fit_fetch"]], "get_params() (folie.kramersmoyalestimator method)": [[11, "folie.KramersMoyalEstimator.get_params"]], "has_model (folie.kramersmoyalestimator property)": [[11, "folie.KramersMoyalEstimator.has_model"]], "model (folie.kramersmoyalestimator property)": [[11, "folie.KramersMoyalEstimator.model"]], "preprocess_traj() (folie.kramersmoyalestimator method)": [[11, "folie.KramersMoyalEstimator.preprocess_traj"]], "set_params() (folie.kramersmoyalestimator method)": [[11, "folie.KramersMoyalEstimator.set_params"]], "likelihoodestimator (class in folie)": [[12, "folie.LikelihoodEstimator"]], "fetch_model() (folie.likelihoodestimator method)": [[12, "folie.LikelihoodEstimator.fetch_model"]], "fit() (folie.likelihoodestimator method)": [[12, "folie.LikelihoodEstimator.fit"]], "fit_fetch() (folie.likelihoodestimator method)": [[12, "folie.LikelihoodEstimator.fit_fetch"]], "get_params() (folie.likelihoodestimator method)": [[12, "folie.LikelihoodEstimator.get_params"]], "has_model (folie.likelihoodestimator property)": [[12, "folie.LikelihoodEstimator.has_model"]], "model (folie.likelihoodestimator property)": [[12, "folie.LikelihoodEstimator.model"]], "set_params() (folie.likelihoodestimator method)": [[12, "folie.LikelihoodEstimator.set_params"]], "ornsteinuhlenbeck (class in folie)": [[13, "folie.OrnsteinUhlenbeck"]], "coefficients (folie.ornsteinuhlenbeck property)": [[13, "folie.OrnsteinUhlenbeck.coefficients"]], "coefficients_diffusion (folie.ornsteinuhlenbeck property)": [[13, "folie.OrnsteinUhlenbeck.coefficients_diffusion"]], "coefficients_force (folie.ornsteinuhlenbeck property)": [[13, "folie.OrnsteinUhlenbeck.coefficients_force"]], "coefficients_meandispl (folie.ornsteinuhlenbeck property)": [[13, "folie.OrnsteinUhlenbeck.coefficients_meandispl"]], "copy() (folie.ornsteinuhlenbeck method)": [[13, "folie.OrnsteinUhlenbeck.copy"]], "dim (folie.ornsteinuhlenbeck property)": [[13, "folie.OrnsteinUhlenbeck.dim"]], "get_params() (folie.ornsteinuhlenbeck method)": [[13, "folie.OrnsteinUhlenbeck.get_params"]], "has_exact_density (folie.ornsteinuhlenbeck property)": [[13, "folie.OrnsteinUhlenbeck.has_exact_density"]], "set_params() (folie.ornsteinuhlenbeck method)": [[13, "folie.OrnsteinUhlenbeck.set_params"]], "overdamped (class in folie)": [[14, "folie.Overdamped"]], "coefficients (folie.overdamped property)": [[14, "folie.Overdamped.coefficients"]], "coefficients_diffusion (folie.overdamped property)": [[14, "folie.Overdamped.coefficients_diffusion"]], "coefficients_force (folie.overdamped property)": [[14, "folie.Overdamped.coefficients_force"]], "coefficients_meandispl (folie.overdamped property)": [[14, "folie.Overdamped.coefficients_meandispl"]], "copy() (folie.overdamped method)": [[14, "folie.Overdamped.copy"]], "dim (folie.overdamped property)": [[14, "folie.Overdamped.dim"]], "get_params() (folie.overdamped method)": [[14, "folie.Overdamped.get_params"]], "has_exact_density (folie.overdamped property)": [[14, "folie.Overdamped.has_exact_density"]], "set_params() (folie.overdamped method)": [[14, "folie.Overdamped.set_params"]], "overdampedfreeenergy (class in folie)": [[15, "folie.OverdampedFreeEnergy"]], "coefficients (folie.overdampedfreeenergy property)": [[15, "folie.OverdampedFreeEnergy.coefficients"]], "coefficients_diffusion (folie.overdampedfreeenergy property)": [[15, "folie.OverdampedFreeEnergy.coefficients_diffusion"]], "coefficients_force (folie.overdampedfreeenergy property)": [[15, "folie.OverdampedFreeEnergy.coefficients_force"]], "coefficients_meandispl (folie.overdampedfreeenergy property)": [[15, "folie.OverdampedFreeEnergy.coefficients_meandispl"]], "copy() (folie.overdampedfreeenergy method)": [[15, "folie.OverdampedFreeEnergy.copy"]], "dim (folie.overdampedfreeenergy property)": [[15, "folie.OverdampedFreeEnergy.dim"]], "get_params() (folie.overdampedfreeenergy method)": [[15, "folie.OverdampedFreeEnergy.get_params"]], "has_exact_density (folie.overdampedfreeenergy property)": [[15, "folie.OverdampedFreeEnergy.has_exact_density"]], "preprocess_traj() (folie.overdampedfreeenergy method)": [[15, "folie.OverdampedFreeEnergy.preprocess_traj"]], "set_params() (folie.overdampedfreeenergy method)": [[15, "folie.OverdampedFreeEnergy.set_params"]], "overdampedsplines1d() (in module folie)": [[16, "folie.OverdampedSplines1D"]], "ozakidensity (class in folie)": [[17, "folie.OzakiDensity"]], "check_dim() (folie.ozakidensity method)": [[17, "folie.OzakiDensity.check_dim"]], "model (folie.ozakidensity property)": [[17, "folie.OzakiDensity.model"]], "preprocess_traj() (folie.ozakidensity method)": [[17, "folie.OzakiDensity.preprocess_traj"]], "shojiozakidensity (class in folie)": [[18, "folie.ShojiOzakiDensity"]], "check_dim() (folie.shojiozakidensity method)": [[18, "folie.ShojiOzakiDensity.check_dim"]], "model (folie.shojiozakidensity property)": [[18, "folie.ShojiOzakiDensity.model"]], "preprocess_traj() (folie.shojiozakidensity method)": [[18, "folie.ShojiOzakiDensity.preprocess_traj"]], "trajectories() (in module folie)": [[19, "folie.Trajectories"]], "bsplinesfunction (class in folie.functions)": [[20, "folie.functions.BSplinesFunction"]], "coefficients (folie.functions.bsplinesfunction property)": [[20, "folie.functions.BSplinesFunction.coefficients"]], "copy() (folie.functions.bsplinesfunction method)": [[20, "folie.functions.BSplinesFunction.copy"]], "differentiate() (folie.functions.bsplinesfunction method)": [[20, "folie.functions.BSplinesFunction.differentiate"]], "fit() (folie.functions.bsplinesfunction method)": [[20, "folie.functions.BSplinesFunction.fit"]], "fit_transform() (folie.functions.bsplinesfunction method)": [[20, "folie.functions.BSplinesFunction.fit_transform"]], "get_params() (folie.functions.bsplinesfunction method)": [[20, "folie.functions.BSplinesFunction.get_params"]], "grad_coeffs() (folie.functions.bsplinesfunction method)": [[20, "folie.functions.BSplinesFunction.grad_coeffs"]], "resize() (folie.functions.bsplinesfunction method)": [[20, "folie.functions.BSplinesFunction.resize"]], "set_output() (folie.functions.bsplinesfunction method)": [[20, "folie.functions.BSplinesFunction.set_output"]], "set_params() (folie.functions.bsplinesfunction method)": [[20, "folie.functions.BSplinesFunction.set_params"]], "transform() (folie.functions.bsplinesfunction method)": [[20, "folie.functions.BSplinesFunction.transform"]], "transform_x() (folie.functions.bsplinesfunction method)": [[20, "folie.functions.BSplinesFunction.transform_x"]], "transform_xx() (folie.functions.bsplinesfunction method)": [[20, "folie.functions.BSplinesFunction.transform_xx"]], "constant (class in folie.functions)": [[21, "folie.functions.Constant"]], "coefficients (folie.functions.constant property)": [[21, "folie.functions.Constant.coefficients"]], "copy() (folie.functions.constant method)": [[21, "folie.functions.Constant.copy"]], "differentiate() (folie.functions.constant method)": [[21, "folie.functions.Constant.differentiate"]], "fit() (folie.functions.constant method)": [[21, "folie.functions.Constant.fit"]], "fit_transform() (folie.functions.constant method)": [[21, "folie.functions.Constant.fit_transform"]], "get_params() (folie.functions.constant method)": [[21, "folie.functions.Constant.get_params"]], "grad_coeffs() (folie.functions.constant method)": [[21, "folie.functions.Constant.grad_coeffs"]], "resize() (folie.functions.constant method)": [[21, "folie.functions.Constant.resize"]], "set_output() (folie.functions.constant method)": [[21, "folie.functions.Constant.set_output"]], "set_params() (folie.functions.constant method)": [[21, "folie.functions.Constant.set_params"]], "transform() (folie.functions.constant method)": [[21, "folie.functions.Constant.transform"]], "transform_x() (folie.functions.constant method)": [[21, "folie.functions.Constant.transform_x"]], "transform_xx() (folie.functions.constant method)": [[21, "folie.functions.Constant.transform_xx"]], "finiteelement (class in folie.functions)": [[22, "folie.functions.FiniteElement"]], "coefficients (folie.functions.finiteelement property)": [[22, "folie.functions.FiniteElement.coefficients"]], "copy() (folie.functions.finiteelement method)": [[22, "folie.functions.FiniteElement.copy"]], "differentiate() (folie.functions.finiteelement method)": [[22, "folie.functions.FiniteElement.differentiate"]], "fit() (folie.functions.finiteelement method)": [[22, "folie.functions.FiniteElement.fit"]], "fit_transform() (folie.functions.finiteelement method)": [[22, "folie.functions.FiniteElement.fit_transform"]], "get_params() (folie.functions.finiteelement method)": [[22, "folie.functions.FiniteElement.get_params"]], "grad_coeffs() (folie.functions.finiteelement method)": [[22, "folie.functions.FiniteElement.grad_coeffs"]], "resize() (folie.functions.finiteelement method)": [[22, "folie.functions.FiniteElement.resize"]], "set_output() (folie.functions.finiteelement method)": [[22, "folie.functions.FiniteElement.set_output"]], "set_params() (folie.functions.finiteelement method)": [[22, "folie.functions.FiniteElement.set_params"]], "transform() (folie.functions.finiteelement method)": [[22, "folie.functions.FiniteElement.transform"]], "transform_x() (folie.functions.finiteelement method)": [[22, "folie.functions.FiniteElement.transform_x"]], "transform_xx() (folie.functions.finiteelement method)": [[22, "folie.functions.FiniteElement.transform_xx"]], "fourier (class in folie.functions)": [[23, "folie.functions.Fourier"]], "coefficients (folie.functions.fourier property)": [[23, "folie.functions.Fourier.coefficients"]], "copy() (folie.functions.fourier method)": [[23, "folie.functions.Fourier.copy"]], "differentiate() (folie.functions.fourier method)": [[23, "folie.functions.Fourier.differentiate"]], "fit() (folie.functions.fourier method)": [[23, "folie.functions.Fourier.fit"]], "fit_transform() (folie.functions.fourier method)": [[23, "folie.functions.Fourier.fit_transform"]], "get_params() (folie.functions.fourier method)": [[23, "folie.functions.Fourier.get_params"]], "grad_coeffs() (folie.functions.fourier method)": [[23, "folie.functions.Fourier.grad_coeffs"]], "resize() (folie.functions.fourier method)": [[23, "folie.functions.Fourier.resize"]], "set_output() (folie.functions.fourier method)": [[23, "folie.functions.Fourier.set_output"]], "set_params() (folie.functions.fourier method)": [[23, "folie.functions.Fourier.set_params"]], "transform() (folie.functions.fourier method)": [[23, "folie.functions.Fourier.transform"]], "transform_x() (folie.functions.fourier method)": [[23, "folie.functions.Fourier.transform_x"]], "transform_xx() (folie.functions.fourier method)": [[23, "folie.functions.Fourier.transform_xx"]], "kernelfunction (class in folie.functions)": [[24, "folie.functions.KernelFunction"]], "coefficients (folie.functions.kernelfunction property)": [[24, "folie.functions.KernelFunction.coefficients"]], "copy() (folie.functions.kernelfunction method)": [[24, "folie.functions.KernelFunction.copy"]], "differentiate() (folie.functions.kernelfunction method)": [[24, "folie.functions.KernelFunction.differentiate"]], "fit() (folie.functions.kernelfunction method)": [[24, "folie.functions.KernelFunction.fit"]], "fit_transform() (folie.functions.kernelfunction method)": [[24, "folie.functions.KernelFunction.fit_transform"]], "get_params() (folie.functions.kernelfunction method)": [[24, "folie.functions.KernelFunction.get_params"]], "grad_coeffs() (folie.functions.kernelfunction method)": [[24, "folie.functions.KernelFunction.grad_coeffs"]], "resize() (folie.functions.kernelfunction method)": [[24, "folie.functions.KernelFunction.resize"]], "set_output() (folie.functions.kernelfunction method)": [[24, "folie.functions.KernelFunction.set_output"]], "set_params() (folie.functions.kernelfunction method)": [[24, "folie.functions.KernelFunction.set_params"]], "transform() (folie.functions.kernelfunction method)": [[24, "folie.functions.KernelFunction.transform"]], "transform_x() (folie.functions.kernelfunction method)": [[24, "folie.functions.KernelFunction.transform_x"]], "transform_xx() (folie.functions.kernelfunction method)": [[24, "folie.functions.KernelFunction.transform_xx"]], "linear (class in folie.functions)": [[25, "folie.functions.Linear"]], "coefficients (folie.functions.linear property)": [[25, "folie.functions.Linear.coefficients"]], "copy() (folie.functions.linear method)": [[25, "folie.functions.Linear.copy"]], "differentiate() (folie.functions.linear method)": [[25, "folie.functions.Linear.differentiate"]], "fit() (folie.functions.linear method)": [[25, "folie.functions.Linear.fit"]], "fit_transform() (folie.functions.linear method)": [[25, "folie.functions.Linear.fit_transform"]], "get_params() (folie.functions.linear method)": [[25, "folie.functions.Linear.get_params"]], "grad_coeffs() (folie.functions.linear method)": [[25, "folie.functions.Linear.grad_coeffs"]], "resize() (folie.functions.linear method)": [[25, "folie.functions.Linear.resize"]], "set_output() (folie.functions.linear method)": [[25, "folie.functions.Linear.set_output"]], "set_params() (folie.functions.linear method)": [[25, "folie.functions.Linear.set_params"]], "transform() (folie.functions.linear method)": [[25, "folie.functions.Linear.transform"]], "transform_x() (folie.functions.linear method)": [[25, "folie.functions.Linear.transform_x"]], "transform_xx() (folie.functions.linear method)": [[25, "folie.functions.Linear.transform_xx"]], "polynomial (class in folie.functions)": [[26, "folie.functions.Polynomial"]], "coefficients (folie.functions.polynomial property)": [[26, "folie.functions.Polynomial.coefficients"]], "copy() (folie.functions.polynomial method)": [[26, "folie.functions.Polynomial.copy"]], "differentiate() (folie.functions.polynomial method)": [[26, "folie.functions.Polynomial.differentiate"]], "fit() (folie.functions.polynomial method)": [[26, "folie.functions.Polynomial.fit"]], "fit_transform() (folie.functions.polynomial method)": [[26, "folie.functions.Polynomial.fit_transform"]], "get_params() (folie.functions.polynomial method)": [[26, "folie.functions.Polynomial.get_params"]], "grad_coeffs() (folie.functions.polynomial method)": [[26, "folie.functions.Polynomial.grad_coeffs"]], "resize() (folie.functions.polynomial method)": [[26, "folie.functions.Polynomial.resize"]], "set_output() (folie.functions.polynomial method)": [[26, "folie.functions.Polynomial.set_output"]], "set_params() (folie.functions.polynomial method)": [[26, "folie.functions.Polynomial.set_params"]], "transform() (folie.functions.polynomial method)": [[26, "folie.functions.Polynomial.transform"]], "transform_x() (folie.functions.polynomial method)": [[26, "folie.functions.Polynomial.transform_x"]], "transform_xx() (folie.functions.polynomial method)": [[26, "folie.functions.Polynomial.transform_xx"]], "coefficients (folie.functions.sklearnbsplines property)": [[27, "folie.functions.sklearnBSplines.coefficients"]], "copy() (folie.functions.sklearnbsplines method)": [[27, "folie.functions.sklearnBSplines.copy"]], "differentiate() (folie.functions.sklearnbsplines method)": [[27, "folie.functions.sklearnBSplines.differentiate"]], "fit() (folie.functions.sklearnbsplines method)": [[27, "folie.functions.sklearnBSplines.fit"]], "fit_transform() (folie.functions.sklearnbsplines method)": [[27, "folie.functions.sklearnBSplines.fit_transform"]], "get_params() (folie.functions.sklearnbsplines method)": [[27, "folie.functions.sklearnBSplines.get_params"]], "grad_coeffs() (folie.functions.sklearnbsplines method)": [[27, "folie.functions.sklearnBSplines.grad_coeffs"]], "resize() (folie.functions.sklearnbsplines method)": [[27, "folie.functions.sklearnBSplines.resize"]], "set_output() (folie.functions.sklearnbsplines method)": [[27, "folie.functions.sklearnBSplines.set_output"]], "set_params() (folie.functions.sklearnbsplines method)": [[27, "folie.functions.sklearnBSplines.set_params"]], "sklearnbsplines (class in folie.functions)": [[27, "folie.functions.sklearnBSplines"]], "transform() (folie.functions.sklearnbsplines method)": [[27, "folie.functions.sklearnBSplines.transform"]], "transform_x() (folie.functions.sklearnbsplines method)": [[27, "folie.functions.sklearnBSplines.transform_x"]], "transform_xx() (folie.functions.sklearnbsplines method)": [[27, "folie.functions.sklearnBSplines.transform_xx"]], "coefficients (folie.functions.sklearntransformer property)": [[28, "folie.functions.sklearnTransformer.coefficients"]], "copy() (folie.functions.sklearntransformer method)": [[28, "folie.functions.sklearnTransformer.copy"]], "differentiate() (folie.functions.sklearntransformer method)": [[28, "folie.functions.sklearnTransformer.differentiate"]], "fit() (folie.functions.sklearntransformer method)": [[28, "folie.functions.sklearnTransformer.fit"]], "fit_transform() (folie.functions.sklearntransformer method)": [[28, "folie.functions.sklearnTransformer.fit_transform"]], "get_params() (folie.functions.sklearntransformer method)": [[28, "folie.functions.sklearnTransformer.get_params"]], "grad_coeffs() (folie.functions.sklearntransformer method)": [[28, "folie.functions.sklearnTransformer.grad_coeffs"]], "resize() (folie.functions.sklearntransformer method)": [[28, "folie.functions.sklearnTransformer.resize"]], "set_output() (folie.functions.sklearntransformer method)": [[28, "folie.functions.sklearnTransformer.set_output"]], "set_params() (folie.functions.sklearntransformer method)": [[28, "folie.functions.sklearnTransformer.set_params"]], "sklearntransformer (class in folie.functions)": [[28, "folie.functions.sklearnTransformer"]], "transform() (folie.functions.sklearntransformer method)": [[28, "folie.functions.sklearnTransformer.transform"]], "transform_x() (folie.functions.sklearntransformer method)": [[28, "folie.functions.sklearnTransformer.transform_x"]], "transform_xx() (folie.functions.sklearntransformer method)": [[28, "folie.functions.sklearnTransformer.transform_xx"]], "coefficients (folie.functions.sklearnwrapper property)": [[29, "folie.functions.sklearnWrapper.coefficients"]], "copy() (folie.functions.sklearnwrapper method)": [[29, "folie.functions.sklearnWrapper.copy"]], "differentiate() (folie.functions.sklearnwrapper method)": [[29, "folie.functions.sklearnWrapper.differentiate"]], "fit() (folie.functions.sklearnwrapper method)": [[29, "folie.functions.sklearnWrapper.fit"]], "fit_transform() (folie.functions.sklearnwrapper method)": [[29, "folie.functions.sklearnWrapper.fit_transform"]], "get_params() (folie.functions.sklearnwrapper method)": [[29, "folie.functions.sklearnWrapper.get_params"]], "grad_coeffs() (folie.functions.sklearnwrapper method)": [[29, "folie.functions.sklearnWrapper.grad_coeffs"]], "resize() (folie.functions.sklearnwrapper method)": [[29, "folie.functions.sklearnWrapper.resize"]], "set_output() (folie.functions.sklearnwrapper method)": [[29, "folie.functions.sklearnWrapper.set_output"]], "set_params() (folie.functions.sklearnwrapper method)": [[29, "folie.functions.sklearnWrapper.set_params"]], "sklearnwrapper (class in folie.functions)": [[29, "folie.functions.sklearnWrapper"]], "transform() (folie.functions.sklearnwrapper method)": [[29, "folie.functions.sklearnWrapper.transform"]], "transform_x() (folie.functions.sklearnwrapper method)": [[29, "folie.functions.sklearnWrapper.transform_x"]], "transform_xx() (folie.functions.sklearnwrapper method)": [[29, "folie.functions.sklearnWrapper.transform_xx"]]}})