
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/plot_underdamped.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_plot_underdamped.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_underdamped.py:


================================
Overdamped Langevin Estimation
================================

How to run a simple estimation

.. GENERATED FROM PYTHON SOURCE LINES 11-67



.. image-sg:: /auto_examples/images/sphx_glr_plot_underdamped_001.png
   :alt: Phase Space, Force, Friction, Diffusion
   :srcset: /auto_examples/images/sphx_glr_plot_underdamped_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    [ 0.14456797  0.09360271 -0.17903578 -0.41497433  0.67493048  0.03822764]






|

.. code-block:: Python


    import numpy as np
    import matplotlib.pyplot as plt

    import folie as fl

    fig, axs = plt.subplots(2, 2)

    # Trouver comment on rentre les donn√©es
    trj = np.loadtxt("datasets/example_underdamped2.trj")
    data = fl.Trajectories(dt=trj[1, 0] - trj[0, 0])
    data.append(trj[:, 1:2])

    axs[0, 0].set_title("Phase Space")
    axs[0, 0].set_xlabel("$x$")
    axs[0, 0].set_ylabel("$v$")
    axs[0, 0].grid()
    axs[0, 0].plot(trj[:, 1:2], trj[:, 2:3])


    fun = fl.functions.Polynomial(deg=3)
    fun_cst = fl.functions.Constant()
    model = fl.models.Underdamped(fun, fun_cst, fun_cst)
    estimator = fl.UnderdampedKramersMoyalEstimator(model)
    model = estimator.fit_fetch(data)
    print(model.coefficients)

    # To find a correct parametrization of the space
    xfa = np.linspace(data.stats.min, data.stats.max, 150).ravel()

    # Force plot
    axs[0, 1].set_title("Force")
    axs[0, 1].set_xlabel("$x$")
    axs[0, 1].set_ylabel("$F(x)$")
    axs[0, 1].grid()
    axs[0, 1].plot(xfa, model.force(xfa.reshape(-1, 1)))
    axs[0, 1].plot(xfa, -2 * xfa * (xfa**2 - 1), label="True")


    # Friction plot
    axs[1, 0].set_title("Friction")
    axs[1, 0].set_xlabel("$x$")
    axs[1, 0].set_ylabel("$\\gamma(x)$")
    axs[1, 0].grid()
    axs[1, 0].plot(xfa, model.friction(xfa.reshape(-1, 1)))
    axs[1, 0].plot(xfa, 0.1 * np.ones_like(xfa))


    # Diffusion plot
    axs[1, 1].set_title("Diffusion")
    axs[1, 1].grid()
    axs[1, 1].plot(xfa, model.diffusion(xfa.reshape(-1, 1)))
    axs[1, 1].plot(xfa, 0.1 / 3.0 * np.ones_like(xfa))
    axs[1, 1].set_xlabel("$x$")
    axs[1, 1].set_ylabel("$D(x)$")
    plt.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 0.338 seconds)


.. _sphx_glr_download_auto_examples_plot_underdamped.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_underdamped.ipynb <plot_underdamped.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_underdamped.py <plot_underdamped.py>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
